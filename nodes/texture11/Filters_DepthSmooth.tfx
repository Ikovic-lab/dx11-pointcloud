Texture2D tex0: PREVIOUS;
Texture2D tex1 <string uiname="Texture In 2";>;
SamplerState s0 <bool visible=false;string uiname="Sampler";> {
Filter=MIN_MAG_MIP_LINEAR;AddressU=CLAMP;AddressV=CLAMP;};
float2 R:TARGETSIZE;

cbuffer controls:register(b0){
	float Attack <float uimin=0.0;float uimax=1.0;> =0.9;
	float Decay <float uimin=0.0;float uimax=1.0;> =0.9;
	float DistanceThreshold <float uimin=0.000; float uimax=0.5;> = 0.02; 
    bool Reset = false;
};

float4 pNORMAL(float4 PosWVP:SV_POSITION,float2 x:TEXCOORD0):SV_TARGET{
    float4 newV =tex0.Sample(s0,x);
	if (Reset) return newV;
	
	float4 oldV=tex1.Sample(s0,x);
	
	float interpolate = 1 - Decay;
	if (newV.x>=oldV.x) interpolate= 1 - Attack;
	
	oldV += (newV-oldV)*interpolate;
	if ( distance(newV.x ,oldV.x) > DistanceThreshold) oldV = newV;
	
	return oldV;
}

technique10 Normal{pass P0  {SetPixelShader(CompileShader(ps_4_0,pNORMAL()));}}
